import React from "react";
import { Container, Row, Col, Card, Badge } from "react-bootstrap";
import { motion } from "framer-motion";
import { BiCalendar, BiCodeAlt } from "react-icons/bi";
import { FaExternalLinkAlt, FaGithub, FaPlay, FaNewspaper } from "react-icons/fa";
import OptimizedImage from "./OptimizedImage";
import "./css/Projects.css";

const Projects = ({ isDarkMode }) => {
  const commercialProjects = [
    {
      title: "–ê–≥—Ä–µ–≥–∞—Ç–æ—Ä –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏",
      description:
        "–ê–≥—Ä–µ–≥–∞—Ç–æ—Ä –¥–ª—è –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞–º —Å–¥–∞—Ç—å –∏–ª–∏ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –≤ –≥–æ—Ä–æ–¥–µ –ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫-–ö–∞–º—á–∞—Ç—Å–∫–∏–π.",
      image: "/img/projects/realty.png",
      link: "https://arendakamchatka.com",
      concept: "–ü—Ä–æ—Å—Ç–æ–π –∏ —É–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å–¥–∞—á–∏ –∏ –∞—Ä–µ–Ω–¥—ã –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.",
      technologies: [
        "React",
        "Node.js",
        "Express",
        "MySQL",
        "styled-components",
        "Figma",
        "RuTube",
        "Yandex Maps",
      ],
      completionDate: "–Ø–Ω–≤–∞—Ä—å 2025",
      role: "Full-stack —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
      features: [
        "–§–æ—Ä–º—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏",
        "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å RuTube",
        "–ß–µ—Ç—ã—Ä–µ —Ç–∏–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, —Å—É–±–∞–¥–º–∏–Ω (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –ø—Ä–∞–≤–∞), –º–µ–Ω–µ–¥–∂–µ—Ä, –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä",
        "–ó–∞—è–≤–∫–∏ –ø—Ä–∏—Ö–æ–¥—è—Ç –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, —Ç–∞–∫ –∏ –º–µ–Ω–µ–¥–∂–µ—Ä—É –æ–±—ä–µ–∫—Ç–æ–≤",
        "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞–º–∏",
        "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º —Å–∞–π—Ç–∞ (–¥–æ 90%)",
      ],
    },
    {
      title: "–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫ –ê–≤—Ç–æ - –ò–º–ø–æ—Ä—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π",
      description:
        "–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –∏ –ø–æ–¥–±–æ—Ä–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –∏–∑ –Ø–ø–æ–Ω–∏–∏, –Æ–∂–Ω–æ–π –ö–æ—Ä–µ–∏ –∏ –ö–∏—Ç–∞—è. –í–∫–ª—é—á–∞–µ—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ç–∞–º–æ–∂–µ–Ω–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π, –ø—Ä–æ—Å–º–æ—Ç—Ä –¥–æ–≥–æ–≤–æ—Ä–æ–≤, —Ñ–æ—Ä–º—ã –∑–∞—è–≤–æ–∫ –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –∫—É—Ä—Å–∞–º–∏ –≤–∞–ª—é—Ç –¶–ë –†–§.",
      image: "/img/projects/vladivostok-auto.png",
      link: "https://vladivostok-auto.ru",
      concept:
        "–ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ –∏–º–ø–æ—Ä—Ç—É –∏ –ø–æ–¥–±–æ—Ä—É –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º, –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ —Ñ–æ—Ä–º–∞–º–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Ä–∞—Å—á–µ—Ç–∞–º–∏ —Ç–∞–º–æ–∂–µ–Ω–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π.",
      technologies: [
        "React",
        "Node.js",
        "Express",
        "styled-components",
        "Framer Motion",
        "Axios",
        "Cheerio",
        "XML2JS",
      ],
      completionDate: "–ê–≤–≥—É—Å—Ç 2025",
      role: "Full-stack —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
      features: [
        "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ç–∞–º–æ–∂–µ–Ω–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π Drom.ru",
        "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç –¶–ë –†–§ —Å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º",
        "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram Bot API –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π",
        "–°–∏—Å—Ç–µ–º–∞ rate limiting –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç —Å–ø–∞–º–∞",
        "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–≤–∞–π–ø–æ–≤ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö",
        "–î–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã –ø–æ —Å—Ç—Ä–∞–Ω–∞–º —Å —É—á–µ—Ç–æ–º —Å–ø–µ—Ü–∏—Ñ–∏–∫–∏ (JPY, KRW, CNY, USD, EUR)",
        "–°–∏—Å—Ç–µ–º–∞ fallback –¥–ª—è —Ä–∞—Å—á–µ—Ç–æ–≤ –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –≤–Ω–µ—à–Ω–∏—Ö API",
      ],
    },
    {
      title: "–û–Ω–ª–∞–π–Ω-–º–∞–≥–∞–∑–∏–Ω",
      description:
        "–¶–∏—Ñ—Ä–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ —Ä—ã–Ω–∫–∞ –≤ –≥–æ—Ä–æ–¥–µ –ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫-–ö–∞–º—á–∞—Ç—Å–∫–∏–π. –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–∏—Ç–∞–Ω–∏—è, –æ–¥–µ–∂–¥—ã, –æ–±—É–≤–∏, –∏–≥—Ä—É—à–µ–∫, –∏ –º–Ω–æ–≥–æ–≥–æ –¥—Ä—É–≥–æ–≥–æ.",
      image: "/img/projects/kammarket.png",
      link: "https://kammarket.com",
      concept:
        "–û—Ü–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä—ã–Ω–æ–∫ –≤ –≥–æ—Ä–æ–¥–µ –ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫-–ö–∞–º—á–∞—Ç—Å–∫–∏–π. –ü–æ–∫—É–ø–∞—Ç–µ–ª–∏ –∏ –ø—Ä–æ–¥–∞–≤—Ü—ã –º–æ–≥—É—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º, –æ–±—â–∞—Ç—å—Å—è, –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏ –ø–æ–∫—É–ø–∞—Ç—å —Ç–æ–≤–∞—Ä—ã.",
      technologies: [
        "React",
        "Node.js",
        "Express",
        "MySQL",
        "styled-components",
      ],
      completionDate: "–°–µ–Ω—Ç—è–±—Ä—å 2024",
      role: "Full-stack —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
      features: [
        "–ü–æ–ª–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏",
        "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏ –∏ –¥–æ—Å—Ç–∞–≤–∫–∞–º–∏",
        "–ß–µ—Ç—ã—Ä–µ —Ç–∏–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –ø—Ä–æ–¥–∞–≤–µ—Ü, –ø–æ–∫—É–ø–∞—Ç–µ–ª—å, –∫—É—Ä—å–µ—Ä",
        "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        "–ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏",
        "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è sitemap.xml –¥–ª—è SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏",
      ],
      mediaLinks: [
        {
          title: "–ò–Ω—Ç–µ—Ä–≤—å—é –Ω–∞ –†–∞–¥–∏–æ –ö–∞–º—á–∞—Ç–∫–∞",
          url: "https://t.me/radiokamchatka/8020",
          platform: "Telegram",
          description: "–†–∞—Å—Å–∫–∞–∑ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏ —Ä–∞–∑–≤–∏—Ç–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞",
          icon: "üìª"
        },
        {
          title: "–°—Ç–∞—Ç—å—è –≤ –ú–∞—Å—Å-–º–µ–¥–∏–∞ –ö–∞–º—á–∞—Ç–∫–∞",
          url: "https://t.me/massmediakam/22809",
          platform: "Telegram",
          description: "–ü–æ–¥—Ä–æ–±–Ω—ã–π –æ–±–∑–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞ –∏ –µ–≥–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π",
          icon: "üì∞"
        }
      ],
    },
    {
      title: "OurVision SMM Studio",
      description:
        "–°–∞–π—Ç SMM-—Å—Ç—É–¥–∏–∏ OurVision, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–µ–π—Å—è –Ω–∞ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–∏ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö, —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏–µ–π –±—Ä–µ–Ω–¥–æ–≤.",
      image: "/img/projects/ourvision.png",
      link: "https://ourvision.pro",
      concept:
        "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å–∞–π—Ç SMM-—Å—Ç—É–¥–∏–∏ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º, –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ —Ä–∞–±–æ—Ç –∏ —É–¥–æ–±–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π –∑–∞–∫–∞–∑–∞ —É—Å–ª—É–≥ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤.",
      technologies: [
        "React",
        "Node.js",
        "Express",
        "MongoDB",
        "styled-components",
        "Framer Motion",
        "Figma",
      ],
      completionDate: "–ú–∞—Ä—Ç 2025",
      role: "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
      features: [
        "–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω –¥–ª—è –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤",
        "–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ —Ä–∞–±–æ—Ç —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º",
        "–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º",
        "–°–∏—Å—Ç–µ–º–∞ –∑–∞–∫–∞–∑–∞ —É—Å–ª—É–≥ –æ–Ω–ª–∞–π–Ω",
      ],
    },
  ];

  const personalProjects = [
    {
      title: "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫—Ä–∞—Å–∏–≤—ã—Ö Ethereum –∞–¥—Ä–µ—Å–æ–≤",
      description:
        "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ Ethereum –∞–¥—Ä–µ—Å–æ–≤ —Å –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–µ—Ñ–∏–∫—Å–∞–º–∏, –≤—Ö–æ–∂–¥–µ–Ω–∏—è–º–∏ –∏–ª–∏ —Å—É—Ñ—Ñ–∏–∫—Å–∞–º–∏.",
      image: "/img/projects/ethereum.png",
      github: "https://github.com/srv328/eth-beautiful-address-generator",
      concept:
        "–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –∫—Ä–∏–ø—Ç–æ—ç–Ω—Ç—É–∑–∏–∞—Å—Ç–æ–≤, –ø–æ–∑–≤–æ–ª—è—é—â–∞—è –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å Ethereum –∫–æ—à–µ–ª—å–∫–∏ —Å –∫—Ä–∞—Å–∏–≤—ã–º–∏ –∏–ª–∏ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–º–∏—Å—è –∞–¥—Ä–µ—Å–∞–º–∏, —Å–æ—Ö—Ä–∞–Ω—è—è –ø—Ä–∏ —ç—Ç–æ–º –¥–æ—Å—Ç—É–ø –∫ –º–Ω–µ–º–æ–Ω–∏—á–µ—Å–∫–∏–º —Ñ—Ä–∞–∑–∞–º.",
      technologies: ["Python", "eth_account", "bip_utils", "threading"],
      completionDate: "–ò—é–Ω—å 2024",
      role: "Backend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
      features: [
        "–ú–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
        "–ü–æ–∏—Å–∫ –∞–¥—Ä–µ—Å–æ–≤ –ø–æ –ø—Ä–µ—Ñ–∏–∫—Å—É (–Ω–∞—á–∞–ª–æ –∞–¥—Ä–µ—Å–∞)",
        "–ü–æ–∏—Å–∫ –∞–¥—Ä–µ—Å–æ–≤ –ø–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—é (–ª—é–±–∞—è —á–∞—Å—Ç—å –∞–¥—Ä–µ—Å–∞)",
        "–ü–æ–∏—Å–∫ –∞–¥—Ä–µ—Å–æ–≤ –ø–æ —Å—É—Ñ—Ñ–∏–∫—Å—É (–∫–æ–Ω–µ—Ü –∞–¥—Ä–µ—Å–∞)",
        "–í—ã–±–æ—Ä –¥–ª–∏–Ω—ã –º–Ω–µ–º–æ–Ω–∏—á–µ—Å–∫–æ–π —Ñ—Ä–∞–∑—ã (12 –∏–ª–∏ 24 —Å–ª–æ–≤–∞)",
        "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ —Ñ–∞–π–ª wallets.txt",
      ],
    },
    {
      title: "–ë–æ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∑–∞–Ω—è—Ç–∏–π FEFU (–î–í–§–£)",
      description:
        "–¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É—á–µ–±–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Å —É–¥–æ–±–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º.",
      image: "/img/projects/tgbot.png",
      github: "https://github.com/srv328/schedule-bot",
      concept:
        "–¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –∑–∞–Ω—è—Ç–∏–π —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Ä–∞–∑–Ω—ã–µ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏.",
      technologies: [
        "Python",
        "aiogram",
        "SQLite3",
        "Redis",
        "asyncio",
        "pytz",
        "openpyxl",
        "Telegram API",
      ],
      completionDate: "–ê–ø—Ä–µ–ª—å 2024",
      role: "Backend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
      features: [
        "–ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è/–∑–∞–≤—Ç—Ä–∞/–Ω–µ–¥–µ–ª—é",
        "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä",
        "–≠–∫—Å–ø–æ—Ä—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≤ Excel –∏ TXT",
        "–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ª–µ–¥—É—é—â–µ–π –ø–∞—Ä—ã",
        "–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
        "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é",
        "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        "–ê–Ω—Ç–∏—Ñ–ª—É–¥ —Å–∏—Å—Ç–µ–º–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Redis",
      ],
    },
    {
      title: "–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –ê–ó–°",
      description:
        "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏ –∞–≤—Ç–æ–∑–∞–ø—Ä–∞–≤–æ—á–Ω—ã—Ö —Å—Ç–∞–Ω—Ü–∏–π —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–¥–∞–∂ —Ç–æ–ø–ª–∏–≤–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞–º–∏.",
      image: "/img/projects/gasstation.png",
      github: "https://github.com/srv328/gasstation-database-management",
      concept:
        "–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∞–≤—Ç–æ–∑–∞–ø—Ä–∞–≤–æ—á–Ω—ã—Ö —Å—Ç–∞–Ω—Ü–∏–π —Å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º.",
      technologies: [
        "C# .NET Framework 4.7.2",
        "Windows Forms",
        "MySQL",
        "ADO.NET",
        "MySql.Data (Connector/NET)",
        "System.Windows.Forms",
      ],
      completionDate: "–Ø–Ω–≤–∞—Ä—å 2024",
      role: "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
      features: [
        "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–∞–∑–Ω—ã–º–∏ —É—Ä–æ–≤–Ω—è–º–∏ –¥–æ—Å—Ç—É–ø–∞ (–∞–¥–º–∏–Ω, –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å —Ñ–∏—Ä–º—ã, –∫–ª–∏–µ–Ω—Ç)",
        "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏ –ê–ó–°, —Ñ–∏—Ä–º –∏ –∫–ª–∏–µ–Ω—Ç–æ–≤",
        "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–¥–∞–∂ —Ç–æ–ø–ª–∏–≤–∞",
        "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏",
        "–ö–∞—Å–∫–∞–¥–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π",
        "–í–∞–ª–∏–¥–∞—Ü–∏—è –≤–≤–æ–¥–∏–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
        "–ó–∞—â–∏—Ç–∞ –æ—Ç SQL-–∏–Ω—ä–µ–∫—Ü–∏–π",
      ],
    },
    {
      title: "get-erc20-balances",
      description:
        "Python-–ø–∞–∫–µ—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ Ethereum-–∞–¥—Ä–µ—Å–æ–≤ –∏–∑ –º–Ω–µ–º–æ–Ω–∏—á–µ—Å–∫–æ–π —Ñ—Ä–∞–∑—ã –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–æ–≤ ETH –∏ ERC-20 —Ç–æ–∫–µ–Ω–æ–≤, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –∑–∞–¥–∞–Ω–Ω—ã–º Ethereum-–∞–¥—Ä–µ—Å–æ–º.",
      image: "/img/projects/blockchain.png",
      github: "https://github.com/srv328/get-erc20-balances",
      concept:
        "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å Ethereum-–∞–¥—Ä–µ—Å–∞ –∏–∑ –º–Ω–µ–º–æ–Ω–∏—á–µ—Å–∫–∏—Ö —Ñ—Ä–∞–∑ –∏ –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–ª–∞–Ω—Å–µ Ethereum –∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö ERC-20 —Ç–æ–∫–µ–Ω–æ–≤ –Ω–∞ —ç—Ç–∏—Ö –∞–¥—Ä–µ—Å–∞—Ö.",
      technologies: ["Python", "web3.py", "hdwallet", "JSON", "Ethereum API"],
      completionDate: "–§–µ–≤—Ä–∞–ª—å 2024",
      role: "Blockchain Developer",
      features: [
        "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è Ethereum-–∞–¥—Ä–µ—Å–æ–≤ –∏–∑ –º–Ω–µ–º–æ–Ω–∏—á–µ—Å–∫–∏—Ö —Ñ—Ä–∞–∑",
        "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø—É—Ç–µ–π –¥–µ—Ä–∏–≤–∞—Ü–∏–∏ (–¥–ª—è Exodus, Trust Wallet, Metamask, Ledger)",
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ ETH",
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–æ–≤ ERC-20 —Ç–æ–∫–µ–Ω–æ–≤",
        "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö ERC-20 —Ç–æ–∫–µ–Ω–æ–≤ (USDT, BNB, USDC –∏ –¥—Ä.)",
        "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–ª—É–±–∏–Ω—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞–¥—Ä–µ—Å–æ–≤",
      ],
    },
    {
      title: "–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ –Ω–∞ React",
      description:
        "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Å–∞–π—Ç-–ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π web-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.",
      image: "/logo512.png",
      github: "https://github.com/srv328/portfolio-react",
      concept:
        "–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞–≤—ã–∫–æ–≤ –∏ –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏.",
      technologies: [
        "React",
        "Bootstrap",
        "CSS3",
        "Framer Motion",
        "Particles.js",
      ],
      completionDate: "–ú–∞–π 2025",
      role: "Frontend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
      features: [
        "–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω –¥–ª—è –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤",
        "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –∏ —ç—Ñ—Ñ–µ–∫—Ç—ã",
        "–¢–µ–º–Ω–∞—è –∏ —Å–≤–µ—Ç–ª–∞—è —Ç–µ–º—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è",
        "–°—Ç–µ–∫–ª—è–Ω–Ω—ã–π –º–æ—Ä—Ñ–∏–∑–º –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞",
      ],
      isPersonalProject: true,
    },
  ];

  // –í–∞—Ä–∏–∞–Ω—Ç—ã –∞–Ω–∏–º–∞—Ü–∏–π –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  const titleAnimation = {
    hidden: { opacity: 0, x: -50 },
    visible: { opacity: 1, x: 0, transition: { duration: 0.5 } },
  };

  const descriptionAnimation = {
    hidden: { opacity: 0, y: 30 },
    visible: { opacity: 1, y: 0, transition: { duration: 0.5, delay: 0.2 } },
  };

  const conceptAnimation = {
    hidden: { opacity: 0, scale: 0.9 },
    visible: {
      opacity: 1,
      scale: 1,
      transition: {
        duration: 0.4,
        delay: 0.3,
        type: "spring",
        stiffness: 100,
      },
    },
  };

  const metaAnimation = {
    hidden: { opacity: 0, x: 30 },
    visible: { opacity: 1, x: 0, transition: { duration: 0.4, delay: 0.4 } },
  };

  const techAnimation = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1,
        delayChildren: 0.5,
        duration: 0.3,
      },
    },
  };

  const techItemAnimation = {
    hidden: { opacity: 0, scale: 0.8, y: 10 },
    visible: {
      opacity: 1,
      scale: 1,
      y: 0,
      transition: { type: "spring", stiffness: 200 },
    },
  };

  const featuresAnimation = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1,
        delayChildren: 0.6,
        when: "beforeChildren",
      },
    },
  };

  const featureItemAnimation = {
    hidden: { opacity: 0, x: -20 },
    visible: { opacity: 1, x: 0, transition: { duration: 0.3 } },
  };

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
  const MediaLinks = ({ mediaLinks, isDarkMode }) => {
    if (!mediaLinks || mediaLinks.length === 0) return null;

    const getIcon = (platform) => {
      switch (platform) {
        case 'Telegram':
          return <FaPlay className="media-icon" />;
        case 'YouTube':
          return <FaPlay className="media-icon" />;
        case 'Article':
          return <FaNewspaper className="media-icon" />;
        default:
          return <FaExternalLinkAlt className="media-icon" />;
      }
    };

    return (
      <motion.div
        className="project-media-links"
        variants={featuresAnimation}
        initial="hidden"
        animate="visible"
      >
        <h6>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:</h6>
        <div className="media-links-grid">
          {mediaLinks.map((mediaLink, i) => (
            <motion.a
              key={i}
              href={mediaLink.url}
              target="_blank"
              rel="noopener noreferrer"
              className={`media-link ${isDarkMode ? 'dark' : 'light'}`}
              variants={featureItemAnimation}
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              <div className="media-link-content">
                <div className="media-link-icon">
                  {getIcon(mediaLink.platform)}
                </div>
                <div className="media-link-text">
                  <div className="media-link-title">{mediaLink.title}</div>
                  <div className="media-link-description">{mediaLink.description}</div>
                  <div className="media-link-platform">{mediaLink.platform}</div>
                </div>
              </div>
            </motion.a>
          ))}
        </div>
      </motion.div>
    );
  };

  // –û–±—â–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
  const ProjectCard = ({ project, index, isLast, totalCount }) => {
    const isFullWidth = isLast && totalCount % 2 !== 0;

    const cardContent = (
      <>
        {isFullWidth ? (
          <>
            {/* –î–µ—Å–∫—Ç–æ–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è - 2 –∫–æ–ª–æ–Ω–∫–∏: –∫–∞—Ä—Ç–∏–Ω–∫–∞+–¥–æ–ø –º–∞—Ç–µ—Ä–∏–∞–ª—ã —Å–ª–µ–≤–∞, –æ–ø–∏—Å–∞–Ω–∏–µ —Å–ø—Ä–∞–≤–∞ */}
            <div className="desktop-full-width-layout">
              <Row className="g-0">
                <Col lg={6} md={12}>
                  <div className="desktop-left-column">
                    <div className="project-image-container full-width-image">
                      <OptimizedImage
                        src={project.image}
                        alt={project.title}
                        className="project-image"
                      />
                      <div className="project-overlay">
                        <div className="project-links">
                          {project.link && (
                            <a
                              href={project.link}
                              target="_blank"
                              rel="noopener noreferrer"
                              className="project-link"
                            >
                              <FaExternalLinkAlt /> –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å
                            </a>
                          )}
                          {project.github && (
                            <a
                              href={project.github}
                              target="_blank"
                              rel="noopener noreferrer"
                              className="project-link github-link"
                            >
                              <FaGithub /> GitHub
                            </a>
                          )}
                        </div>
                      </div>
                    </div>
                    
                    <MediaLinks mediaLinks={project.mediaLinks} isDarkMode={isDarkMode} />
                  </div>
                </Col>
                
                <Col lg={6} md={12}>
                  <Card.Body>
                    <motion.div
                      initial="hidden"
                      whileInView="visible"
                      viewport={{ once: true }}
                    >
                      <motion.div variants={titleAnimation}>
                        <Card.Title className="project-title">
                          {project.title}
                        </Card.Title>
                      </motion.div>

                      <motion.div variants={descriptionAnimation}>
                        <Card.Text className="project-description">
                          {project.description}
                        </Card.Text>
                      </motion.div>

                      <motion.div
                        className="project-concept"
                        variants={conceptAnimation}
                      >
                        <h6 className="concept-title">–ö–æ–Ω—Ü–µ–ø—Ü–∏—è:</h6>
                        <p>{project.concept}</p>
                      </motion.div>

                      <motion.div className="project-meta" variants={metaAnimation}>
                        <div className="project-date">
                          <BiCalendar className="meta-icon" />
                          <span>{project.completionDate}</span>
                        </div>
                        <div className="project-role">
                          <BiCodeAlt className="meta-icon" />
                          <span>{project.role}</span>
                        </div>
                      </motion.div>

                      <motion.div
                        className="project-technologies"
                        variants={techAnimation}
                      >
                        {project.technologies.map((tech, i) => (
                          <motion.span key={i} variants={techItemAnimation}>
                            <Badge className="tech-badge">{tech}</Badge>
                          </motion.span>
                        ))}
                      </motion.div>

                      <motion.div
                        className="project-features"
                        variants={featuresAnimation}
                      >
                        <h6>–ö–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</h6>
                        <ul>
                          {project.features.map((feature, i) => (
                            <motion.li key={i} variants={featureItemAnimation}>
                              {feature}
                            </motion.li>
                          ))}
                        </ul>
                      </motion.div>
                    </motion.div>
                  </Card.Body>
                </Col>
              </Row>
            </div>
            
            {/* –ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è - —Å—Ç–∞—Ä–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ */}
            <div className="mobile-full-width-layout">
              <Row className="g-0">
                <Col lg={6} md={12}>
                  <div className="project-image-container full-width-image">
                    <OptimizedImage
                      src={project.image}
                      alt={project.title}
                      className="project-image"
                    />
                    <div className="project-overlay">
                      <div className="project-links">
                        {project.link && (
                          <a
                            href={project.link}
                            target="_blank"
                            rel="noopener noreferrer"
                            className="project-link"
                          >
                            <FaExternalLinkAlt /> –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å
                          </a>
                        )}
                        {project.github && (
                          <a
                            href={project.github}
                            target="_blank"
                            rel="noopener noreferrer"
                            className="project-link github-link"
                          >
                            <FaGithub /> GitHub
                          </a>
                        )}
                      </div>
                    </div>
                  </div>
                </Col>
                <Col lg={6} md={12}>
                  <Card.Body>
                    <motion.div
                      initial="hidden"
                      whileInView="visible"
                      viewport={{ once: true }}
                    >
                      <motion.div variants={titleAnimation}>
                        <Card.Title className="project-title">
                          {project.title}
                        </Card.Title>
                      </motion.div>

                      <motion.div variants={descriptionAnimation}>
                        <Card.Text className="project-description">
                          {project.description}
                        </Card.Text>
                      </motion.div>

                      <motion.div
                        className="project-concept"
                        variants={conceptAnimation}
                      >
                        <h6 className="concept-title">–ö–æ–Ω—Ü–µ–ø—Ü–∏—è:</h6>
                        <p>{project.concept}</p>
                      </motion.div>

                      <motion.div className="project-meta" variants={metaAnimation}>
                        <div className="project-date">
                          <BiCalendar className="meta-icon" />
                          <span>{project.completionDate}</span>
                        </div>
                        <div className="project-role">
                          <BiCodeAlt className="meta-icon" />
                          <span>{project.role}</span>
                        </div>
                      </motion.div>

                      <motion.div
                        className="project-technologies"
                        variants={techAnimation}
                      >
                        {project.technologies.map((tech, i) => (
                          <motion.span key={i} variants={techItemAnimation}>
                            <Badge className="tech-badge">{tech}</Badge>
                          </motion.span>
                        ))}
                      </motion.div>

                      <motion.div
                        className="project-features"
                        variants={featuresAnimation}
                      >
                        <h6>–ö–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</h6>
                        <ul>
                          {project.features.map((feature, i) => (
                            <motion.li key={i} variants={featureItemAnimation}>
                              {feature}
                            </motion.li>
                          ))}
                        </ul>
                      </motion.div>

                      <MediaLinks mediaLinks={project.mediaLinks} isDarkMode={isDarkMode} />
                    </motion.div>
                  </Card.Body>
                </Col>
              </Row>
            </div>
          </>
        ) : (
          <>
            <div className={`project-image-container ${project.isPersonalProject ? 'personal-project' : ''}`}>
              <OptimizedImage
                src={project.image}
                alt={project.title}
                className="project-image"
              />
              <div className="project-overlay">
                <div className="project-links">
                  {project.link && (
                    <a
                      href={project.link}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="project-link"
                    >
                      <FaExternalLinkAlt /> –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å
                    </a>
                  )}
                  {project.github && (
                    <a
                      href={project.github}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="project-link github-link"
                    >
                      <FaGithub /> GitHub
                    </a>
                  )}
                </div>
              </div>
            </div>
            <Card.Body>
              <motion.div
                initial="hidden"
                whileInView="visible"
                viewport={{ once: true }}
              >
                <motion.div variants={titleAnimation}>
                  <Card.Title className="project-title">
                    {project.title}
                  </Card.Title>
                </motion.div>

                <motion.div variants={descriptionAnimation}>
                  <Card.Text className="project-description">
                    {project.description}
                  </Card.Text>
                </motion.div>

                <motion.div
                  className="project-concept"
                  variants={conceptAnimation}
                >
                  <h6 className="concept-title">–ö–æ–Ω—Ü–µ–ø—Ü–∏—è:</h6>
                  <p>{project.concept}</p>
                </motion.div>

                <motion.div className="project-meta" variants={metaAnimation}>
                  <div className="project-date">
                    <BiCalendar className="meta-icon" />
                    <span>{project.completionDate}</span>
                  </div>
                  <div className="project-role">
                    <BiCodeAlt className="meta-icon" />
                    <span>{project.role}</span>
                  </div>
                </motion.div>

                <motion.div
                  className="project-technologies"
                  variants={techAnimation}
                >
                  {project.technologies.map((tech, i) => (
                    <motion.span key={i} variants={techItemAnimation}>
                      <Badge className="tech-badge">{tech}</Badge>
                    </motion.span>
                  ))}
                </motion.div>

                <motion.div
                  className="project-features"
                  variants={featuresAnimation}
                >
                  <h6>–ö–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</h6>
                  <ul>
                    {project.features.map((feature, i) => (
                      <motion.li key={i} variants={featureItemAnimation}>
                        {feature}
                      </motion.li>
                    ))}
                  </ul>
                </motion.div>

                <MediaLinks mediaLinks={project.mediaLinks} isDarkMode={isDarkMode} />
              </motion.div>
            </Card.Body>
          </>
        )}
      </>
    );

    return (
      <Col
        lg={isFullWidth ? 12 : 6}
        md={12}
        sm={12}
        key={index}
        className="mb-4"
      >
        <motion.div
          initial={{ opacity: 0, y: 50 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.5, delay: index * 0.1 }}
        >
          <Card
            className={`project-card h-100 ${
              isDarkMode ? "dark-mode" : "light-mode"
            } ${isFullWidth ? "full-width-card" : ""}`}
          >
            {cardContent}
          </Card>
        </motion.div>
      </Col>
    );
  };

  return (
    <Container className="my-5">
      <motion.h2
        initial={{ opacity: 0, y: -50 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
        className="text-center mb-5 projects-main-title"
      >
        –ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã
      </motion.h2>

      {/* –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã */}
      <motion.h3
        initial={{ opacity: 0, y: -30 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5, delay: 0.2 }}
        className="text-center mb-4 section-subtitle"
      >
        –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã
      </motion.h3>

      <Row className="mb-5">
        {commercialProjects.map((project, index) => (
          <ProjectCard
            project={project}
            index={index}
            key={index}
            isLast={index === commercialProjects.length - 1}
            totalCount={commercialProjects.length}
          />
        ))}
      </Row>

      {/* –ù–µ–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã */}
      <motion.h3
        initial={{ opacity: 0, y: -30 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
        className="text-center mb-4 mt-5 section-subtitle"
      >
        –ù–µ–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã
      </motion.h3>

      <Row>
        {personalProjects.map((project, index) => (
          <ProjectCard
            project={project}
            index={index}
            key={index}
            isLast={index === personalProjects.length - 1}
            totalCount={personalProjects.length}
          />
        ))}
      </Row>
    </Container>
  );
};

export default Projects;
